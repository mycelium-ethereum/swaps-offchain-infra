name: Deploy swaps prices image to k8's cluster

on:
    push:
        branches:
            - main

env:
    GAR_LOCATION: us-central1
    PROJECT_ID: ${{ secrets.PRICES_GKE_PROJECT }}
    GKE_CLUSTER: swaps-prices-cluster # Add your cluster name here.
    GKE_ZONE: us-central1 # Add your cluster zone here.
    DEPLOYMENT_NAME: swaps-prices # Add your deployment name here.
    IMAGE: swaps-prices

jobs:
    setup-and-deploy:
        name: Setup and Deploy
        runs-on: ubuntu-latest

        # Add "id-token" with the intended permissions.
        permissions:
            contents: "read"
            id-token: "write"

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - uses: vmware-tanzu/carvel-setup-action@v1

            # Configure Workload Identity Federation and generate an access token.
            #- id: 'auth'
            # name: 'Authenticate to Google Cloud'
            # uses: 'google-github-actions/auth@v0'
            # with:
            # workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
            # service_account: 'my-service-account@my-project.iam.gserviceaccount.com'

            # Alternative option - authentication via credentials json
            - id: "auth"
              uses: "google-github-actions/auth@v0"
              with:
                  credentials_json: "${{ secrets.PRICES_GKE_SA_KEY }}"

            # Setup gcloud CLI
            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v0

            # Configure Docker to use the gcloud command-line tool as a credential
            # helper for authentication
            - run: |-
                  gcloud --quiet auth configure-docker

            # Get the GKE credentials so we can deploy to the cluster
            - run: |-
                  gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

            # Build the Docker image
            - name: Build
              run: |-
                  docker build \
                    -f "./packages/swaps-prices/Dockerfile" \
                    --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
                    --build-arg GITHUB_SHA="$GITHUB_SHA" \
                    --build-arg GITHUB_REF="$GITHUB_REF" \
                    .

            # Push the Docker image to Google Container Registry
            - name: Publish
              run: |-
                  docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

            - name: Build
              run: cd ./packages/swaps-prices/deployment && ./generateConfig.sh schema.yml "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

            - name: Apply
              run: kubectl apply -f deployment/output/deployment.yml

            # Deploy sample image to the GKE cluster
            - name: Deploy
              run: |-
                  kubectl rollout status deployment/$DEPLOYMENT_NAME
                  kubectl get services -o wide
